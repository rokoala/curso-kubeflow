apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: conditional-execution-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.16, pipelines.kubeflow.org/pipeline_compilation_time: '2022-11-25T13:16:27.203548',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Shows how to use dsl.Condition().",
      "name": "Conditional execution pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.16}
spec:
  entrypoint: conditional-execution-pipeline
  templates:
  - name: condition-1
    dag:
      tasks:
      - name: condition-2
        template: condition-2
        when: '{{tasks.generate-random-number.outputs.parameters.generate-random-number-output}}
          > 5'
        dependencies: [generate-random-number]
        arguments:
          parameters:
          - {name: generate-random-number-output, value: '{{tasks.generate-random-number.outputs.parameters.generate-random-number-output}}'}
      - name: condition-3
        template: condition-3
        when: '{{tasks.generate-random-number.outputs.parameters.generate-random-number-output}}
          <= 5'
        dependencies: [generate-random-number]
        arguments:
          parameters:
          - {name: generate-random-number-output, value: '{{tasks.generate-random-number.outputs.parameters.generate-random-number-output}}'}
      - {name: generate-random-number, template: generate-random-number}
  - name: condition-2
    inputs:
      parameters:
      - {name: generate-random-number-output}
    dag:
      tasks:
      - name: print
        template: print
        arguments:
          parameters:
          - {name: generate-random-number-output, value: '{{inputs.parameters.generate-random-number-output}}'}
  - name: condition-3
    inputs:
      parameters:
      - {name: generate-random-number-output}
    dag:
      tasks:
      - name: print-2
        template: print-2
        arguments:
          parameters:
          - {name: generate-random-number-output, value: '{{inputs.parameters.generate-random-number-output}}'}
  - name: condition-4
    dag:
      tasks:
      - name: condition-5
        template: condition-5
        when: '{{tasks.generate-random-number-2.outputs.parameters.generate-random-number-2-output}}
          > 15'
        dependencies: [generate-random-number-2]
        arguments:
          parameters:
          - {name: generate-random-number-2-output, value: '{{tasks.generate-random-number-2.outputs.parameters.generate-random-number-2-output}}'}
      - name: condition-6
        template: condition-6
        when: '{{tasks.generate-random-number-2.outputs.parameters.generate-random-number-2-output}}
          <= 15'
        dependencies: [generate-random-number-2]
        arguments:
          parameters:
          - {name: generate-random-number-2-output, value: '{{tasks.generate-random-number-2.outputs.parameters.generate-random-number-2-output}}'}
      - {name: generate-random-number-2, template: generate-random-number-2}
  - name: condition-5
    inputs:
      parameters:
      - {name: generate-random-number-2-output}
    dag:
      tasks:
      - name: print-3
        template: print-3
        arguments:
          parameters:
          - {name: generate-random-number-2-output, value: '{{inputs.parameters.generate-random-number-2-output}}'}
  - name: condition-6
    inputs:
      parameters:
      - {name: generate-random-number-2-output}
    dag:
      tasks:
      - name: print-4
        template: print-4
        arguments:
          parameters:
          - {name: generate-random-number-2-output, value: '{{inputs.parameters.generate-random-number-2-output}}'}
  - name: conditional-execution-pipeline
    dag:
      tasks:
      - name: condition-1
        template: condition-1
        when: '"{{tasks.flip-coin.outputs.parameters.flip-coin-output}}" == "heads"'
        dependencies: [flip-coin]
      - name: condition-4
        template: condition-4
        when: '"{{tasks.flip-coin.outputs.parameters.flip-coin-output}}" == "tails"'
        dependencies: [flip-coin]
      - {name: flip-coin, template: flip-coin}
  - name: flip-coin
    container:
      args: ['python -c "import random; result = ''heads'' if random.randint(0,1)
          == 0 else ''tails''; print(result)" | tee /tmp/output']
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: flip-coin-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: flip-coin-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: generate-random-number
    container:
      args: ['python -c "import random; print(random.randint($0, $1))" | tee $2',
        '0', '9', /tmp/output]
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: generate-random-number-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: generate-random-number-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: generate-random-number-2
    container:
      args: ['python -c "import random; print(random.randint($0, $1))" | tee $2',
        '10', '19', /tmp/output]
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: generate-random-number-2-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: generate-random-number-2-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: print
    container:
      command: [echo, 'heads and {{inputs.parameters.generate-random-number-output}}
          > 5!']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: generate-random-number-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: print-2
    container:
      command: [echo, 'heads and {{inputs.parameters.generate-random-number-output}}
          <= 5!']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: generate-random-number-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: print-3
    container:
      command: [echo, 'tails and {{inputs.parameters.generate-random-number-2-output}}
          > 15!']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: generate-random-number-2-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: print-4
    container:
      command: [echo, 'tails and {{inputs.parameters.generate-random-number-2-output}}
          <= 15!']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: generate-random-number-2-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.16
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner